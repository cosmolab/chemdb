<?php

/**
 * BaseAnalysis
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $batch_id
 * @property integer $sample_id
 * @property integer $number_within_batch
 * @property string $sample_name
 * @property string $sample_type
 * @property integer $diss_bottle_id
 * @property string $diss_bottle_number
 * @property double $wt_diss_bottle_tare
 * @property double $wt_diss_bottle_sample
 * @property double $wt_be_carrier
 * @property double $wt_al_carrier
 * @property double $wt_diss_bottle_total
 * @property string $notes
 * @property Batch $Batch
 * @property Sample $Sample
 * @property DissBottle $DissBottle
 * @property Doctrine_Collection $AlAms
 * @property Doctrine_Collection $BeAms
 * @property Doctrine_Collection $Split
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnalysis extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('analysis');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('batch_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => '0',
             'notnull' => true,
             ));
        $this->hasColumn('sample_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('number_within_batch', 'integer', null, array(
             'type' => 'integer',
             'default' => '0',
             'notnull' => true,
             ));
        $this->hasColumn('sample_name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('sample_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('diss_bottle_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('diss_bottle_number', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('wt_diss_bottle_tare', 'double', 53, array(
             'type' => 'double',
             'default' => '0',
             'notnull' => true,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('wt_diss_bottle_sample', 'double', 53, array(
             'type' => 'double',
             'default' => '0',
             'notnull' => true,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('wt_be_carrier', 'double', 53, array(
             'type' => 'double',
             'default' => '0',
             'notnull' => true,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('wt_al_carrier', 'double', 53, array(
             'type' => 'double',
             'default' => '0',
             'notnull' => true,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('wt_diss_bottle_total', 'double', 53, array(
             'type' => 'double',
             'default' => '0',
             'notnull' => true,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('notes', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Batch', array(
             'local' => 'batch_id',
             'foreign' => 'id'));

        $this->hasOne('Sample', array(
             'local' => 'sample_id',
             'foreign' => 'id'));

        $this->hasOne('DissBottle', array(
             'local' => 'diss_bottle_id',
             'foreign' => 'id'));

        $this->hasMany('AlAms', array(
             'local' => 'id',
             'foreign' => 'analysis_id'));

        $this->hasMany('BeAms', array(
             'local' => 'id',
             'foreign' => 'analysis_id'));

        $this->hasMany('Split', array(
             'local' => 'id',
             'foreign' => 'analysis_id'));
    }
}