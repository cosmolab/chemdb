<?php

/**
 * BaseSample
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property double $latitude
 * @property double $longitude
 * @property double $altitude
 * @property integer $antarctic
 * @property double $shield_factor
 * @property double $depth_top
 * @property double $depth_bottom
 * @property double $density
 * @property double $erosion_rate
 * @property string $notes
 * @property Doctrine_Collection $AlcheckAnalysis
 * @property Doctrine_Collection $Analysis
 * @property Doctrine_Collection $ProjectSample
 * @property Doctrine_Collection $SilCl36Analysis
 * @property Doctrine_Collection $Project
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSample extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('sample');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('latitude', 'double', 53, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('longitude', 'double', 53, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('altitude', 'double', 53, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('antarctic', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('shield_factor', 'double', 53, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('depth_top', 'double', 53, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('depth_bottom', 'double', 53, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('density', 'double', 53, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('erosion_rate', 'double', 53, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '53',
             'scale' => '30',
             ));
        $this->hasColumn('notes', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AlcheckAnalysis', array(
             'local' => 'id',
             'foreign' => 'sample_id'));

        $this->hasMany('Analysis', array(
             'local' => 'id',
             'foreign' => 'sample_id'));

        $this->hasMany('ProjectSample', array(
             'local' => 'id',
             'foreign' => 'sample_id'));

        $this->hasMany('SilCl36Analysis', array(
             'local' => 'id',
             'foreign' => 'sample_id'));

        $this->hasMany('Project', array(
             'refClass' => 'ProjectSample',
             'local' => 'sample_id',
             'foreign' => 'project_id'));
    }
}