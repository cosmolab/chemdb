CREATE TABLE al_ams (id BIGINT UNSIGNED AUTO_INCREMENT, analysis_id BIGINT UNSIGNED, al_ams_std_id BIGINT UNSIGNED, ams_lab_id BIGINT UNSIGNED, date DATE, lab_num VARCHAR(255), r_to_rstd DOUBLE(53, 30), interror DOUBLE(53, 30), exterror DOUBLE(53, 30), truefrac DOUBLE(53, 30), notes TEXT, INDEX analysis_id_idx (analysis_id), INDEX al_ams_std_id_idx (al_ams_std_id), INDEX ams_lab_id_idx (ams_lab_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE al_ams_std (id BIGINT UNSIGNED AUTO_INCREMENT, name VARCHAR(255), al_std_series_id BIGINT UNSIGNED, r26to27 DOUBLE(53, 30), error DOUBLE(53, 30), notes TEXT, INDEX al_std_series_id_idx (al_std_series_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE al_carrier (id BIGINT UNSIGNED AUTO_INCREMENT, name TEXT NOT NULL, al_conc DOUBLE(53, 30), del_al_conc DOUBLE(53, 30), r26to27 DOUBLE(53, 30), r26to27_error DOUBLE(53, 30), in_service_date DATE, mfg_lot_no TEXT, owner TEXT, notes TEXT, in_use TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE al_std_series (id BIGINT UNSIGNED AUTO_INCREMENT, code VARCHAR(60), notes TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE alcheck_analysis (id BIGINT UNSIGNED AUTO_INCREMENT, sample_id BIGINT UNSIGNED, alcheck_batch_id BIGINT UNSIGNED DEFAULT '0' NOT NULL, number_within_batch BIGINT UNSIGNED DEFAULT '0' NOT NULL, sample_name TEXT NOT NULL, bkr_number TEXT NOT NULL, wt_bkr_tare DOUBLE(53, 30) DEFAULT 0 NOT NULL, flag_bkr_tare_avg BIGINT UNSIGNED DEFAULT '0' NOT NULL, wt_bkr_sample DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_bkr_soln DOUBLE(53, 30) DEFAULT 0, icp_al DOUBLE(53, 30) DEFAULT 0, icp_ba DOUBLE(53, 30) DEFAULT 0, icp_be DOUBLE(53, 30) DEFAULT 0, icp_ca DOUBLE(53, 30) DEFAULT 0, icp_fe DOUBLE(53, 30) DEFAULT 0, icp_k DOUBLE(53, 30) DEFAULT 0, icp_mg DOUBLE(53, 30) DEFAULT 0, icp_mn DOUBLE(53, 30) DEFAULT 0, icp_na DOUBLE(53, 30) DEFAULT 0, icp_ti DOUBLE(53, 30) DEFAULT 0, addl_dil_factor DOUBLE(53, 30) DEFAULT 1 NOT NULL, notes TEXT, INDEX sample_id_idx (sample_id), INDEX alcheck_batch_id_idx (alcheck_batch_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE alcheck_batch (id BIGINT UNSIGNED AUTO_INCREMENT, owner TEXT, prep_date DATE, icp_date DATE, description TEXT, notes TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ams_current (id BIGINT UNSIGNED AUTO_INCREMENT, current DOUBLE(53, 30), be_ams_id BIGINT UNSIGNED, al_ams_id BIGINT UNSIGNED, INDEX be_ams_id_idx (be_ams_id), INDEX al_ams_id_idx (al_ams_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ams_lab (id BIGINT UNSIGNED AUTO_INCREMENT, name VARCHAR(255) DEFAULT '' NOT NULL, full_name TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE analysis (id BIGINT UNSIGNED AUTO_INCREMENT, batch_id BIGINT UNSIGNED DEFAULT '0' NOT NULL, sample_id BIGINT UNSIGNED, number_within_batch BIGINT DEFAULT '0' NOT NULL, sample_name TEXT NOT NULL, sample_type TEXT NOT NULL, diss_bottle_id BIGINT UNSIGNED, diss_bottle_number TEXT NOT NULL, wt_diss_bottle_tare DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_diss_bottle_sample DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_be_carrier DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_al_carrier DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_diss_bottle_total DOUBLE(53, 30) DEFAULT 0 NOT NULL, notes TEXT NOT NULL, INDEX batch_id_idx (batch_id), INDEX sample_id_idx (sample_id), INDEX diss_bottle_id_idx (diss_bottle_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE batch (id BIGINT UNSIGNED AUTO_INCREMENT, al_carrier_id BIGINT UNSIGNED, be_carrier_id BIGINT UNSIGNED, owner TEXT, description TEXT, start_date DATE DEFAULT '0000-00-00' NOT NULL, split_date DATE DEFAULT '0000-00-00' NOT NULL, icp_date DATE DEFAULT '0000-00-00' NOT NULL, be_carrier_name TEXT NOT NULL, wt_be_carrier_init DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_be_carrier_final DOUBLE(53, 30) DEFAULT 0 NOT NULL, al_carrier_name TEXT NOT NULL, wt_al_carrier_init DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_al_carrier_final DOUBLE(53, 30) DEFAULT 0 NOT NULL, notes TEXT, completed VARCHAR(1) DEFAULT 'n' NOT NULL, spreadsheet_name TEXT, csv_name TEXT, INDEX al_carrier_id_idx (al_carrier_id), INDEX be_carrier_id_idx (be_carrier_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE be_ams (id BIGINT UNSIGNED AUTO_INCREMENT, analysis_id BIGINT UNSIGNED, be_ams_std_id BIGINT UNSIGNED, ams_lab_id BIGINT UNSIGNED, date DATE, lab_num VARCHAR(255), r_to_rstd DOUBLE(53, 30), interror DOUBLE(53, 30), exterror DOUBLE(53, 30), truefrac DOUBLE(53, 30), notes TEXT, INDEX analysis_id_idx (analysis_id), INDEX be_ams_std_id_idx (be_ams_std_id), INDEX ams_lab_id_idx (ams_lab_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE be_ams_std (id BIGINT UNSIGNED AUTO_INCREMENT, name VARCHAR(255), be_std_series_id BIGINT UNSIGNED, r10to9 DOUBLE(53, 30), error DOUBLE(53, 30), notes TEXT, INDEX be_std_series_id_idx (be_std_series_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE be_carrier (id BIGINT UNSIGNED AUTO_INCREMENT, name TEXT NOT NULL, be_conc DOUBLE(53, 30), del_be_conc DOUBLE(53, 30), al_conc DOUBLE(53, 30), del_al_conc DOUBLE(53, 30), r10to9 DOUBLE(53, 30), r10to9_error DOUBLE(53, 30), in_service_date DATE, mfg_lot_no TEXT, owner TEXT, notes TEXT, in_use TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE be_std_series (id BIGINT UNSIGNED AUTO_INCREMENT, code VARCHAR(60), notes TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE diss_bottle (id BIGINT UNSIGNED AUTO_INCREMENT, bottle_number TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE icp_run (id BIGINT UNSIGNED AUTO_INCREMENT, split_id BIGINT UNSIGNED, run_num BIGINT UNSIGNED DEFAULT '1' NOT NULL, al_result DOUBLE(53, 30) DEFAULT 0 NOT NULL, be_result DOUBLE(53, 30) DEFAULT 0 NOT NULL, use_al VARCHAR(1) DEFAULT 'y' NOT NULL, use_be VARCHAR(1) DEFAULT 'y' NOT NULL, INDEX split_id_idx (split_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE project (id BIGINT UNSIGNED AUTO_INCREMENT, name VARCHAR(255) NOT NULL, date_added DATETIME, description TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE project_sample (project_id BIGINT UNSIGNED, sample_id BIGINT UNSIGNED, PRIMARY KEY(project_id, sample_id)) ENGINE = INNODB;
CREATE TABLE sample (id BIGINT UNSIGNED AUTO_INCREMENT, name VARCHAR(255) DEFAULT '' NOT NULL, latitude DOUBLE(53, 30), longitude DOUBLE(53, 30), altitude DOUBLE(53, 30), antarctic BIGINT DEFAULT '0' NOT NULL, shield_factor DOUBLE(53, 30), depth_top DOUBLE(53, 30), depth_bottom DOUBLE(53, 30), density DOUBLE(53, 30), erosion_rate DOUBLE(53, 30), notes TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sil_cl36_analysis (id BIGINT UNSIGNED AUTO_INCREMENT, sample_id BIGINT UNSIGNED, sample_name VARCHAR(255) DEFAULT '' NOT NULL, cl36_batch_id BIGINT UNSIGNED, calib_id BIGINT UNSIGNED, cl37_spike_id BIGINT UNSIGNED, sample_type VARCHAR(6) DEFAULT 'SAMPLE' NOT NULL, wt_spike DOUBLE(53, 30), wt_bkr_tare DOUBLE(53, 30), wt_bkr_sample DOUBLE(53, 30), INDEX sample_id_idx (sample_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sil_cl36_batch (id BIGINT UNSIGNED AUTO_INCREMENT, owner VARCHAR(60), cl_carrier_id BIGINT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE split (id BIGINT UNSIGNED AUTO_INCREMENT, analysis_id BIGINT UNSIGNED NOT NULL, split_bkr_id BIGINT UNSIGNED, split_num BIGINT UNSIGNED DEFAULT '1' NOT NULL, split_bkr_name TEXT, wt_split_bkr_tare DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_split_bkr_split DOUBLE(53, 30) DEFAULT 0 NOT NULL, wt_split_bkr_icp DOUBLE(53, 30) DEFAULT 0 NOT NULL, INDEX analysis_id_idx (analysis_id), INDEX split_bkr_id_idx (split_bkr_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE split_bkr (id BIGINT UNSIGNED AUTO_INCREMENT, bkr_number TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE al_ams ADD CONSTRAINT al_ams_analysis_id_analysis_id FOREIGN KEY (analysis_id) REFERENCES analysis(id);
ALTER TABLE al_ams ADD CONSTRAINT al_ams_ams_lab_id_ams_lab_id FOREIGN KEY (ams_lab_id) REFERENCES ams_lab(id);
ALTER TABLE al_ams ADD CONSTRAINT al_ams_al_ams_std_id_al_ams_std_id FOREIGN KEY (al_ams_std_id) REFERENCES al_ams_std(id);
ALTER TABLE al_ams_std ADD CONSTRAINT al_ams_std_al_std_series_id_al_std_series_id FOREIGN KEY (al_std_series_id) REFERENCES al_std_series(id);
ALTER TABLE alcheck_analysis ADD CONSTRAINT alcheck_analysis_sample_id_sample_id FOREIGN KEY (sample_id) REFERENCES sample(id);
ALTER TABLE alcheck_analysis ADD CONSTRAINT alcheck_analysis_alcheck_batch_id_alcheck_batch_id FOREIGN KEY (alcheck_batch_id) REFERENCES alcheck_batch(id);
ALTER TABLE ams_current ADD CONSTRAINT ams_current_be_ams_id_be_ams_id FOREIGN KEY (be_ams_id) REFERENCES be_ams(id);
ALTER TABLE ams_current ADD CONSTRAINT ams_current_al_ams_id_al_ams_id FOREIGN KEY (al_ams_id) REFERENCES al_ams(id);
ALTER TABLE analysis ADD CONSTRAINT analysis_sample_id_sample_id FOREIGN KEY (sample_id) REFERENCES sample(id);
ALTER TABLE analysis ADD CONSTRAINT analysis_diss_bottle_id_diss_bottle_id FOREIGN KEY (diss_bottle_id) REFERENCES diss_bottle(id);
ALTER TABLE analysis ADD CONSTRAINT analysis_batch_id_batch_id FOREIGN KEY (batch_id) REFERENCES batch(id);
ALTER TABLE batch ADD CONSTRAINT batch_be_carrier_id_be_carrier_id FOREIGN KEY (be_carrier_id) REFERENCES be_carrier(id);
ALTER TABLE batch ADD CONSTRAINT batch_al_carrier_id_al_carrier_id FOREIGN KEY (al_carrier_id) REFERENCES al_carrier(id);
ALTER TABLE be_ams ADD CONSTRAINT be_ams_be_ams_std_id_be_ams_std_id FOREIGN KEY (be_ams_std_id) REFERENCES be_ams_std(id);
ALTER TABLE be_ams ADD CONSTRAINT be_ams_analysis_id_analysis_id FOREIGN KEY (analysis_id) REFERENCES analysis(id);
ALTER TABLE be_ams ADD CONSTRAINT be_ams_ams_lab_id_ams_lab_id FOREIGN KEY (ams_lab_id) REFERENCES ams_lab(id);
ALTER TABLE be_ams_std ADD CONSTRAINT be_ams_std_be_std_series_id_be_std_series_id FOREIGN KEY (be_std_series_id) REFERENCES be_std_series(id);
ALTER TABLE icp_run ADD CONSTRAINT icp_run_split_id_split_id FOREIGN KEY (split_id) REFERENCES split(id);
ALTER TABLE project_sample ADD CONSTRAINT project_sample_sample_id_sample_id FOREIGN KEY (sample_id) REFERENCES sample(id);
ALTER TABLE project_sample ADD CONSTRAINT project_sample_project_id_project_id FOREIGN KEY (project_id) REFERENCES project(id);
ALTER TABLE sil_cl36_analysis ADD CONSTRAINT sil_cl36_analysis_sample_id_sample_id FOREIGN KEY (sample_id) REFERENCES sample(id);
ALTER TABLE split ADD CONSTRAINT split_split_bkr_id_split_bkr_id FOREIGN KEY (split_bkr_id) REFERENCES split_bkr(id);
ALTER TABLE split ADD CONSTRAINT split_analysis_id_analysis_id FOREIGN KEY (analysis_id) REFERENCES analysis(id);
