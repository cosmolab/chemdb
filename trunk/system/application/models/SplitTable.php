<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SplitTable extends Doctrine_Table
{
    
	/**
	 * Inserts ICP results into database.
	 *
	 * @return void boolean true if successful, false if insert failed
	 **/
	public function insertIcpResults($al_arr, $be_arr, $batch_id)
	{
	    $al_count = count($al_arr);
	    $be_count = count($be_arr);
	    
	    $batch = Doctrine_Query::create()
	        ->from('Batch b, b.Analysis a, a.Split s, s.SplitBkr sb, s.IcpRun r')
	        ->select('b.id, a.id, s.id, s.split_num, sb.id, sb.bkr_number, r.id, r.be_result, r.al_result, r.run_num')
	        ->where('b.id = ?', $batch_id)
	        ->orderBy('s.split_num')
	        ->addOrderBy('r.run_num')
	        ->fetchOne();
	    
	    // change the batch
	    foreach ($batch->Analysis as &$a) {
	        foreach ($a->Split as &$s) {
	            $bkr_num = $s->SplitBkr->bkr_number;
	            $nRunsDb = $s->IcpRun->count();
	            $nRuns = count($al_arr[$bkr_num]);
	            
	            // what if a run was removed by the user
                if ($nRunsDb > $nRuns) {
                    $nDeleted = $this->removeExcessRuns($s, $nRuns);
                    // update $nRunsDb to new value
                    $nRunsDb = $nRuns;
                    $batch->refreshRelated();
                }
	            
	            for ($r = 0; $r < $nRuns; $r++) {
	                if ($r >= $nRunsDb) {
	                    $newRun = new IcpRun();
	                    $newRun->run_num = $r + 1;
	                    $s->IcpRun[] = $newRun;
	                }
	                if (isset($al_arr[$bkr_num][$r])) {
	                    $s->IcpRun[$r]->al_result = $al_arr[$bkr_num][$r];
	                    $s->IcpRun[$r]->use_al = 'y';
	                }
	                if (isset($be_arr[$bkr_num][$r])) {
	                    $s->IcpRun[$r]->be_result = $be_arr[$bkr_num][$r];
	                    $s->IcpRun[$r]->use_be = 'y';
                    }
	            }
	        }
	    }
	    $batch->refreshRelated();
	    $batch->save();
	}
	
	private function removeExcessRuns(&$split, $nRemainingRuns)
	{
	    return Doctrine_Query::create()
	        ->delete('IcpRun')
	        ->where('split_id = ?', $split->id)
	        ->addWhere('run_num > ?', $nRemainingRuns)
	        ->execute();
	}

}